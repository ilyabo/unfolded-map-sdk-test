[{"/Users/ilya/Workspace/map-sdk-test/src/App.tsx":"1","/Users/ilya/Workspace/map-sdk-test/src/index.tsx":"2"},{"size":1937,"mtime":1614780262889,"results":"3","hashOfConfig":"4"},{"size":520,"mtime":1614778613491,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"17bur5x",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilya/Workspace/map-sdk-test/src/App.tsx",["11"],"import React, {useEffect, useMemo, useState} from 'react';\nimport './App.css';\nimport {\n  Layer, createMap, getLayers,\n  setMapControlVisibility,\n  setTimelineConfig,\n  setLayerVisibility,\n  MapInstance\n} from '@unfolded/map-sdk';\n\nfunction App() {\n  const [map, setMap] = useState<MapInstance>();\n  const [layers, setLayers] = useState<Layer[]>();\n  const [selectedLayerId, setSelectedLayer] = useState<string>();\n  const aiqLayerId = useMemo(() =>\n    layers?.find(({id, label}) => label === 'Air Quality (now)')?.id, [layers]\n  );\n  const handleSelectLayer = async (layerId: string) => {\n    if (!map || !layers) return;\n    if (layerId === selectedLayerId) return;\n    setSelectedLayer(layerId);\n    if (aiqLayerId != null) {\n      await setTimelineConfig(map, { idx: 0, isVisible: layerId === aiqLayerId });\n    }\n    for (const {id} of layers) {\n      const isVisible = id === layerId;\n      await setLayerVisibility(map, id, isVisible);\n    }\n  };\n  useEffect(() => {\n    const mapInstance = createMap({\n      mapUUID: '84c26003-2d8c-4b61-b55d-964c1a043e35',\n      appendToDocument: true,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      embed: true,\n      onLoad: async function () {\n        const mapLayers = await getLayers(mapInstance);\n        setLayers(mapLayers);\n        if (mapLayers?.length > 0) {\n          await handleSelectLayer(mapLayers[0].id);\n        }\n        await setMapControlVisibility(mapInstance, {panelId: 'mapLegend', isVisible: false});\n      }\n    });\n    setMap(mapInstance);\n  }, []);\n\n  console.log(selectedLayerId);\n  return (\n    <>\n      {layers &&\n      <ul className=\"Legend\">\n        {layers.map((layer: Layer) =>\n          <li\n            key={layer.id}\n            onClick={() => handleSelectLayer(layer.id)}\n          >\n            {layer.id === selectedLayerId ? `> ${layer.label} <` : layer.label}\n          </li>)}\n      </ul>}\n    </>\n  );\n}\n\nexport default App;\n","/Users/ilya/Workspace/map-sdk-test/src/index.tsx",[],{"ruleId":"12","severity":1,"message":"13","line":47,"column":6,"nodeType":"14","endLine":47,"endColumn":8,"suggestions":"15"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSelectLayer'. Either include it or remove the dependency array.","ArrayExpression",["16"],{"desc":"17","fix":"18"},"Update the dependencies array to be: [handleSelectLayer]",{"range":"19","text":"20"},[1540,1542],"[handleSelectLayer]"]